{% extends 'admin/_layout.html.twig' %}

{% block title %}Pengaturan Role - Admin Gembira{% endblock %}

{% block page_icon %}🔐{% endblock %}
{% block page_title %}Pengaturan Role{% endblock %}
{% block page_description %}Kelola role dan permission pengguna sistem{% endblock %}

{% block admin_content %}
    <!-- Role Statistics -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <div class="bg-white rounded-lg shadow-sm border-l-4 border-red-500 p-6">
            <div class="flex items-center">
                <div class="flex-1">
                    <div class="text-xs font-bold text-red-600 uppercase mb-1">
                        Super Admin
                    </div>
                    <div class="text-2xl font-bold text-gray-800">{{ role_stats.super_admin }}</div>
                    <div class="text-sm text-gray-500">Akses penuh sistem</div>
                </div>
                <div class="text-4xl text-gray-300">
                    👑
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border-l-4 border-blue-500 p-6">
            <div class="flex items-center">
                <div class="flex-1">
                    <div class="text-xs font-bold text-blue-600 uppercase mb-1">
                        Admin
                    </div>
                    <div class="text-2xl font-bold text-gray-800">{{ role_stats.admin }}</div>
                    <div class="text-sm text-gray-500">Manajemen & laporan</div>
                </div>
                <div class="text-4xl text-gray-300">
                    👨‍💼
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border-l-4 border-green-500 p-6">
            <div class="flex items-center">
                <div class="flex-1">
                    <div class="text-xs font-bold text-green-600 uppercase mb-1">
                        Pegawai
                    </div>
                    <div class="text-2xl font-bold text-gray-800">{{ role_stats.pegawai }}</div>
                    <div class="text-sm text-gray-500">Absensi & profile</div>
                </div>
                <div class="text-4xl text-gray-300">
                    👨‍💻
                </div>
            </div>
        </div>
    </div>

    <!-- Role Configuration -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
        <!-- Default Role Permissions -->
        <div class="bg-white rounded-lg shadow-sm">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900 flex items-center">
                    <span class="mr-2">⚙️</span> Default Permission per Role
                </h3>
            </div>
            <div class="p-6">
                {% for role_key, role_info in available_roles %}
                    <div class="mb-6 last:mb-0">
                        <div class="flex items-center mb-3">
                            {% if role_key == 'super_admin' %}
                                <span class="text-lg mr-2">👑</span>
                            {% elseif role_key == 'admin' %}
                                <span class="text-lg mr-2">👨‍💼</span>
                            {% else %}
                                <span class="text-lg mr-2">👨‍💻</span>
                            {% endif %}
                            <h4 class="text-md font-medium text-gray-800">{{ role_info.name }}</h4>
                            <span class="ml-2 text-xs px-2 py-1 bg-{{ role_info.color }}-100 text-{{ role_info.color }}-800 rounded-full">
                                {{ role_stats[role_key] }} user
                            </span>
                        </div>
                        <p class="text-sm text-gray-600 mb-3">{{ role_info.description }}</p>

                        <form class="role-permission-form" data-role="{{ role_key }}">
                            <div class="grid grid-cols-1 gap-2">
                                {% for perm_key, perm_info in available_permissions %}
                                    <label class="flex items-start">
                                        <input type="checkbox" name="permissions[]" value="{{ perm_key }}"
                                               class="mt-1 mr-2"
                                               {{ perm_key in role_permissions[role_key] ? 'checked' : '' }}>
                                        <div class="flex-1">
                                            <span class="text-sm font-medium">{{ perm_info.name }}</span>
                                            <p class="text-xs text-gray-500">{{ perm_info.description }}</p>
                                        </div>
                                    </label>
                                {% endfor %}
                            </div>
                            <button type="submit"
                                    class="mt-4 bg-{{ role_info.color }}-600 hover:bg-{{ role_info.color }}-700 text-white px-4 py-2 rounded text-sm font-medium">
                                Update Permission {{ role_info.name }}
                            </button>
                        </form>
                    </div>
                    {% if not loop.last %}<hr class="my-6">{% endif %}
                {% endfor %}
            </div>
        </div>

        <!-- User Role Management -->
        <div class="bg-white rounded-lg shadow-sm">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900 flex items-center">
                    <span class="mr-2">👥</span> Kelola Permission User
                </h3>
            </div>
            <div class="p-6">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Pilih Role</label>
                    <select id="roleSelector"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                            onchange="loadUsersByRole(this.value)">
                        <option value="">Pilih Role...</option>
                        {% for role_key, role_info in available_roles %}
                            <option value="{{ role_key }}">{{ role_info.name }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div id="usersByRole" class="hidden">
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Pilih User</label>
                        <select id="userSelector"
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                onchange="loadUserPermissions(this.value)">
                            <option value="">Pilih User...</option>
                        </select>
                    </div>

                    <div id="userPermissions" class="hidden">
                        <h4 class="text-md font-medium text-gray-800 mb-3">Custom Permission</h4>
                        <form id="userPermissionForm">
                            <input type="hidden" id="selectedUserId" name="userId">
                            <div class="grid grid-cols-1 gap-2 mb-4">
                                {% for perm_key, perm_info in available_permissions %}
                                    <label class="flex items-start">
                                        <input type="checkbox" name="permissions[]" value="{{ perm_key }}" class="mt-1 mr-2 user-perm-cb">
                                        <div class="flex-1">
                                            <span class="text-sm font-medium">{{ perm_info.name }}</span>
                                            <p class="text-xs text-gray-500">{{ perm_info.description }}</p>
                                        </div>
                                    </label>
                                {% endfor %}
                            </div>
                            <div class="flex space-x-2">
                                <button type="submit"
                                        class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm font-medium">
                                    Update Permission User
                                </button>
                                <button type="button" onclick="resetUserPermissions()"
                                        class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded text-sm font-medium">
                                    Reset ke Default
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Available Permissions Info -->
    <div class="bg-white rounded-lg shadow-sm">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900 flex items-center">
                <span class="mr-2">ℹ️</span> Informasi Permission
            </h3>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {% for perm_key, perm_info in available_permissions %}
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h4 class="font-medium text-gray-900 mb-2">{{ perm_info.name }}</h4>
                        <p class="text-sm text-gray-600">{{ perm_info.description }}</p>
                        <div class="mt-2">
                            <span class="inline-block px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded">{{ perm_key }}</span>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% endblock %}

{% block admin_javascripts %}
<script>
// Handle role permission form submit
document.querySelectorAll('.role-permission-form').forEach(form => {
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const role = this.dataset.role;
        const permissions = Array.from(this.querySelectorAll('input[name="permissions[]"]:checked')).map(cb => cb.value);

        try {
            const response = await fetch('{{ path('app_admin_role_update_permissions') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    role: role,
                    permissions: permissions
                })
            });

            const result = await response.json();

            if (result.success) {
                alert(result.message);
                location.reload();
            } else {
                alert('Error: ' + result.message);
            }
        } catch (error) {
            alert('Terjadi kesalahan: ' + error.message);
        }
    });
});

// Load users by role
async function loadUsersByRole(role) {
    if (!role) {
        document.getElementById('usersByRole').classList.add('hidden');
        return;
    }

    try {
        const response = await fetch(`{{ path('app_admin_role_users_by_role', {role: '__ROLE__'}) }}`.replace('__ROLE__', role));
        const result = await response.json();

        if (result.success) {
            const userSelector = document.getElementById('userSelector');
            userSelector.innerHTML = '<option value="">Pilih User...</option>';

            result.users.forEach(user => {
                const option = document.createElement('option');
                option.value = user.id;
                option.textContent = `${user.namaLengkap} (${user.username})`;
                userSelector.appendChild(option);
            });

            document.getElementById('usersByRole').classList.remove('hidden');
            document.getElementById('userPermissions').classList.add('hidden');
        }
    } catch (error) {
        alert('Terjadi kesalahan: ' + error.message);
    }
}

// Load user permissions
async function loadUserPermissions(userId) {
    if (!userId) {
        document.getElementById('userPermissions').classList.add('hidden');
        return;
    }

    try {
        const response = await fetch(`{{ path('app_admin_user_get', {id: '__ID__'}) }}`.replace('__ID__', userId));
        const result = await response.json();

        if (result.success) {
            document.getElementById('selectedUserId').value = userId;

            // Set user permissions
            document.querySelectorAll('.user-perm-cb').forEach(cb => {
                cb.checked = result.user.permissions.includes(cb.value);
            });

            document.getElementById('userPermissions').classList.remove('hidden');
        }
    } catch (error) {
        alert('Terjadi kesalahan: ' + error.message);
    }
}

// Handle user permission form submit
document.getElementById('userPermissionForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const userId = document.getElementById('selectedUserId').value;
    const permissions = Array.from(document.querySelectorAll('.user-perm-cb:checked')).map(cb => cb.value);

    try {
        const response = await fetch(`{{ path('app_admin_role_update_user_permissions', {id: '__ID__'}) }}`.replace('__ID__', userId), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                permissions: permissions
            })
        });

        const result = await response.json();

        if (result.success) {
            alert(result.message);
        } else {
            alert('Error: ' + result.message);
        }
    } catch (error) {
        alert('Terjadi kesalahan: ' + error.message);
    }
});

// Reset user permissions to default
async function resetUserPermissions() {
    const userId = document.getElementById('selectedUserId').value;

    if (!userId) return;

    if (confirm('Apakah Anda yakin ingin mereset permission user ini ke default role?')) {
        try {
            const response = await fetch(`{{ path('app_admin_role_reset_user_permissions', {id: '__ID__'}) }}`.replace('__ID__', userId), {
                method: 'POST'
            });

            const result = await response.json();

            if (result.success) {
                alert(result.message);
                // Reload user permissions
                loadUserPermissions(userId);
            } else {
                alert('Error: ' + result.message);
            }
        } catch (error) {
            alert('Terjadi kesalahan: ' + error.message);
        }
    }
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    // Initial setup if needed
});
</script>
{% endblock %}