{% extends 'base.html.twig' %}

{% block title %}Struktur Organisasi - Admin Gembira{% endblock %}

{% block body %}
<!-- Layout dengan Sidebar -->
<div class="flex h-screen bg-gray-100">
    <!-- Sidebar -->
    <div class="w-64 bg-white shadow-lg flex-shrink-0">
        <!-- Header Sidebar -->
        <div class="bg-purple-600 text-white p-4">
            <h1 class="text-lg font-bold">Admin Panel Gembira</h1>
            <p class="text-purple-200 text-sm">{{ app.user.namaLengkap ?? app.user.nama ?? 'Admin' }}</p>
        </div>
        
        <!-- Menu Navigation -->
        <nav class="mt-4">
            <!-- Dashboard -->
            <a href="{{ path('app_admin_dashboard') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-purple-500">
                <span class="text-lg mr-3">🏠</span>
                <span class="font-medium">Dashboard</span>
            </a>
            
            <!-- User -->
            <a href="{{ path('app_admin_user') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-indigo-500">
                <span class="text-lg mr-3">👤</span>
                <span class="font-medium">User</span>
            </a>
            
            <!-- Pengaturan Role -->
            <a href="{{ path('app_admin_role') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-purple-500">
                <span class="text-lg mr-3">🔐</span>
                <span class="font-medium">Pengaturan Role</span>
            </a>
            
            <!-- Data Management -->
            <div class="menu-group">
                <button onclick="toggleSubmenu('dataManagement')" class="w-full flex items-center justify-between px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-blue-500">
                    <div class="flex items-center">
                        <span class="text-lg mr-3">👥</span>
                        <span class="font-medium">Data Management</span>
                    </div>
                    <svg class="w-4 h-4 transform transition-transform submenu-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                <div id="dataManagement" class="hidden bg-gray-50 ml-8">
                    <a href="{{ path('app_admin_unit_kerja') }}" class="flex items-center px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100">
                        <span class="text-sm mr-2">🏢</span>
                        <span class="text-sm">Unit Kerja</span>
                    </a>
                    <a href="{{ path('app_admin_kepala_bidang') }}" class="flex items-center px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100">
                        <span class="text-sm mr-2">👔</span>
                        <span class="text-sm">Kepala Bidang</span>
                    </a>
                    <a href="{{ path('app_admin_kepala_kantor') }}" class="flex items-center px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100">
                        <span class="text-sm mr-2">🏛️</span>
                        <span class="text-sm">Kepala Kantor</span>
                    </a>
                    <a href="{{ path('app_admin_pegawai') }}" class="flex items-center px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100">
                        <span class="text-sm mr-2">👨‍💼</span>
                        <span class="text-sm">Pegawai</span>
                    </a>
                </div>
            </div>
            
            <!-- Events -->
            <a href="{{ path('app_admin_event_index') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-pink-500">
                <span class="text-lg mr-3">🎉</span>
                <span class="font-medium">Events</span>
            </a>
            
            <!-- Jadwal Absensi -->
            <a href="{{ path('app_admin_jadwal_absensi') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-teal-500">
                <span class="text-lg mr-3">⏰</span>
                <span class="font-medium">Jadwal Absensi</span>
            </a>
            
            
            <!-- Laporan Kehadiran -->
            <a href="{{ path('app_admin_laporan_kehadiran') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-green-500">
                <span class="text-lg mr-3">📊</span>
                <span class="font-medium">Laporan Kehadiran</span>
            </a>
            
            <!-- Validasi Absen -->
            <a href="{{ path('app_admin_validasi_absen') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-orange-500">
                <span class="text-lg mr-3">✅</span>
                <span class="font-medium">Validasi Absen</span>
                {% set pending_count = stats.pending ?? 0 %}
                {% if pending_count > 0 %}
                <span class="ml-auto bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">{{ pending_count }}</span>
                {% endif %}
            </a>
            
            <!-- Laporan Bulanan -->
            <a href="{{ path('app_admin_laporan_bulanan') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-transparent hover:border-indigo-500">
                <span class="text-lg mr-3">📈</span>
                <span class="font-medium">Laporan Bulanan</span>
            </a>
            
            <hr class="my-4">
            
            <!-- Pengaturan -->
            <a href="{{ path('app_admin_pengaturan') }}" class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 border-l-4 border-yellow-500">
                <span class="text-lg mr-3">⚙️</span>
                <span class="font-medium">Pengaturan</span>
            </a>
            
            <!-- Logout -->
            <form method="post" action="{{ path('app_logout') }}" class="mt-4">
                <input type="hidden" name="_csrf_token" value="{{ csrf_token('logout') }}">
                <button type="submit" class="w-full flex items-center px-4 py-3 text-red-600 hover:bg-red-50 border-l-4 border-red-500">
                    <span class="text-lg mr-3">🚪</span>
                    <span class="font-medium">Logout</span>
                </button>
            </form>
        </nav>
    </div>

    <!-- Main Content Area -->
    <div class="flex-1 overflow-y-auto">
        <!-- Header -->
        <div class="bg-white shadow-sm px-6 py-4 border-b">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <h2 class="text-xl font-bold text-gray-800">🏢 Struktur Organisasi</h2>
                </div>
                <div class="text-sm text-gray-600">{{ 'now'|date('d/m/Y H:i') }}</div>
            </div>
        </div>
        
        <!-- Content -->
        <div class="p-6">
        
        <!-- Statistics Cards -->
        <div class="grid grid-cols-2 md:grid-cols-5 gap-4 mb-6">
            <div class="bg-white rounded-lg shadow-sm p-4 text-center">
                <div class="text-2xl mb-2">🏢</div>
                <div class="text-xl font-bold text-blue-600">{{ statistics.unit_kerja.total_units }}</div>
                <div class="text-xs text-gray-600">Unit Kerja</div>
            </div>
            
            <div class="bg-white rounded-lg shadow-sm p-4 text-center">
                <div class="text-2xl mb-2">👥</div>
                <div class="text-xl font-bold text-cyan-600">{{ statistics.pegawai.total_pegawai }}</div>
                <div class="text-xs text-gray-600">Total Pegawai</div>
            </div>
            
            <div class="bg-white rounded-lg shadow-sm p-4 text-center">
                <div class="text-2xl mb-2">👨‍💼</div>
                <div class="text-xl font-bold text-green-600">{{ statistics.kepala_bidang.total_kepala_bidang }}</div>
                <div class="text-xs text-gray-600">Kepala Bidang</div>
            </div>
            
            <div class="bg-white rounded-lg shadow-sm p-4 text-center">
                <div class="text-2xl mb-2">⭐</div>
                <div class="text-xl font-bold text-purple-600">{{ statistics.kepala_kantor.active_kepala_kantor }}</div>
                <div class="text-xs text-gray-600">Kepala Kantor Aktif</div>
            </div>
            
            <div class="bg-white rounded-lg shadow-sm p-4 text-center">
                <div class="text-2xl mb-2">📊</div>
                <div class="text-xl font-bold text-indigo-600">{{ statistics.pegawai.pegawai_with_unit }}/{{ statistics.pegawai.total_pegawai }}</div>
                <div class="text-xs text-gray-600">Pegawai Terorganisir</div>
            </div>
        </div>

        <!-- Tab Navigation -->
        <div class="bg-white rounded-xl shadow-sm mb-6">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8 px-6">
                    <a href="#unit-kerja" class="tab-link active py-4 px-1 border-b-2 border-purple-500 font-medium text-sm text-purple-600">
                        🏢 Unit Kerja
                    </a>
                    <a href="#pegawai" class="tab-link py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        👥 Pegawai
                    </a>
                    <a href="#kepala-bidang" class="tab-link py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        👨‍💼 Kepala Bidang
                    </a>
                    <a href="#kepala-kantor" class="tab-link py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300">
                        ⭐ Kepala Kantor
                    </a>
                </nav>
            </div>
        </div>

        <!-- Tab Content Container -->
        <div id="tabContent">
            
            <!-- Tab Unit Kerja -->
            <div id="unit-kerja" class="tab-content active">
                <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold">🏢 Kelola Unit Kerja</h3>
                        <button onclick="openCreateUnitKerjaModal()" class="bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium text-sm">
                            ➕ Tambah Unit Kerja
                        </button>
                    </div>
                    
                    <div id="unitKerjaList" class="space-y-3">
                        {% for unit in unit_kerja_list %}
                        <div id="unit-{{ unit.id }}" class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                            <div class="flex items-center space-x-4">
                                <div class="text-2xl">🏢</div>
                                <div>
                                    <div class="font-medium text-gray-800">{{ unit.namaUnit }}</div>
                                    <div class="text-sm text-gray-600">Kode: <span class="font-mono">{{ unit.kodeUnit }}</span></div>
                                    {% if unit.keterangan %}
                                        <div class="text-xs text-gray-500 mt-1">{{ unit.keterangan }}</div>
                                    {% endif %}
                                    <div class="flex items-center space-x-4 mt-2">
                                        <span class="text-xs text-blue-600">
                                            👨‍💼 {{ unit.namaKepalaBidang ?? 'Belum ada kepala bidang' }}
                                        </span>
                                        <span class="text-xs text-green-600">
                                            👥 {{ unit.jumlahPegawai }} pegawai
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <button onclick="editUnitKerja({{ unit.id }})" class="p-2 text-gray-600 hover:bg-gray-50 rounded-lg" title="Edit Unit Kerja">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                    </svg>
                                </button>
                                <button onclick="deleteUnitKerja({{ unit.id }}, '{{ unit.namaUnit|e('js') }}')" class="p-2 text-red-600 hover:bg-red-50 rounded-lg" title="Hapus Unit Kerja">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                    </svg>
                                </button>
                            </div>
                        </div>
                        {% else %}
                        <div class="text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">🏢</div>
                            <div>Belum ada unit kerja</div>
                            <div class="text-sm">Klik "Tambah Unit Kerja" untuk menambah unit baru</div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

            <!-- Tab Pegawai -->
            <div id="pegawai" class="tab-content">
                <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold">👥 Kelola Pegawai & Unit Kerja</h3>
                        <button onclick="openAssignPegawaiModal()" class="bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium text-sm">
                            🔄 Assign Pegawai ke Unit
                        </button>
                    </div>
                    
                    <!-- Filter Unit -->
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Filter berdasarkan Unit Kerja:</label>
                        <select id="filterUnitKerja" class="w-full md:w-64 border border-gray-300 rounded-lg px-3 py-2" onchange="filterPegawaiByUnit()">
                            <option value="">Semua Unit Kerja</option>
                            {% for unit in unit_kerja_list %}
                            <option value="{{ unit.id }}">{{ unit.namaUnit }} ({{ unit.kodeUnit }})</option>
                            {% endfor %}
                        </select>
                    </div>
                    
                    <div id="pegawaiList" class="space-y-3">
                        <!-- Pegawai dengan Unit Kerja -->
                        {% set pegawaiWithUnit = [] %}
                        {% for unit in unit_kerja_list %}
                            {% for pegawai in unit.pegawai %}
                                {% set pegawaiWithUnit = pegawaiWithUnit|merge([pegawai]) %}
                                <div class="pegawai-item unit-{{ unit.id }} flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                                    <div class="flex items-center space-x-4">
                                        <div class="text-2xl">👤</div>
                                        <div>
                                            <div class="font-medium text-gray-800">{{ pegawai.nama }}</div>
                                            <div class="text-sm text-gray-600">
                                                NIP: <span class="font-mono">{{ pegawai.nip }}</span>
                                            </div>
                                            <div class="text-sm text-gray-600">
                                                {{ pegawai.jabatan }}
                                            </div>
                                            <div class="flex items-center space-x-3 mt-1">
                                                <span class="text-xs text-blue-600">
                                                    🏢 {{ unit.namaUnit }} ({{ unit.kodeUnit }})
                                                </span>
                                                {% if unit.kepalaBidang %}
                                                <span class="text-xs text-green-600">
                                                    👨‍💼 Kepala: {{ unit.kepalaBidang.nama }}
                                                </span>
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                    <div class="flex items-center space-x-2">
                                        <button onclick="reassignPegawai({{ pegawai.id }}, '{{ pegawai.nama|e('js') }}')" class="p-2 text-blue-600 hover:bg-blue-50 rounded-lg" title="Pindah Unit Kerja">
                                            🔄
                                        </button>
                                        <button onclick="removePegawaiFromUnit({{ pegawai.id }}, '{{ pegawai.nama|e('js') }}')" class="p-2 text-orange-600 hover:bg-orange-50 rounded-lg" title="Lepas dari Unit Kerja">
                                            ❌
                                        </button>
                                    </div>
                                </div>
                            {% endfor %}
                        {% endfor %}

                        <!-- Pegawai tanpa Unit Kerja -->
                        {% if pegawaiWithUnit|length == 0 %}
                            <div class="text-center py-8 text-gray-500">
                                <div class="text-4xl mb-2">👥</div>
                                <div>Belum ada pegawai yang terdaftar dalam unit kerja</div>
                                <div class="text-sm">Klik "Assign Pegawai ke Unit" untuk mengatur unit kerja pegawai</div>
                            </div>
                        {% endif %}

                        <!-- Info Box untuk Pegawai tanpa Unit -->
                        <div id="pegawaiTanpaUnitInfo" class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <div class="flex items-center">
                                <div class="text-2xl mr-3">⚠️</div>
                                <div>
                                    <div class="font-semibold text-yellow-800">Pegawai belum memiliki Unit Kerja</div>
                                    <div class="text-sm text-yellow-700">
                                        Beberapa pegawai mungkin belum terdaftar dalam unit kerja. 
                                        Gunakan tombol "Assign Pegawai ke Unit" untuk mengatur unit kerja mereka.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tab Kepala Bidang -->
            <div id="kepala-bidang" class="tab-content">
                <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold">👨‍💼 Kelola Kepala Bidang</h3>
                        <button onclick="openCreateKepalaBidangModal()" class="bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium text-sm">
                            ➕ Tambah Kepala Bidang
                        </button>
                    </div>
                    
                    <div id="kepalaBidangList" class="space-y-3">
                        {% for kepala in kepala_bidang_list %}
                        <div id="kepala-bidang-{{ kepala.id }}" class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                            <div class="flex items-center space-x-4">
                                <div class="text-2xl">👨‍💼</div>
                                <div>
                                    <div class="font-medium text-gray-800">{{ kepala.nama }}</div>
                                    <div class="text-sm text-gray-600">
                                        NIP: <span class="font-mono">{{ kepala.nip }}</span>
                                    </div>
                                    <div class="text-sm text-gray-600">
                                        {{ kepala.jabatan }}
                                        {% if kepala.pangkatGol %} • {{ kepala.pangkatGol }}{% endif %}
                                    </div>
                                    <div class="text-xs text-blue-600 mt-1">
                                        🏢 {{ kepala.namaUnitKerja }}
                                    </div>
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <button onclick="editKepalaBidang({{ kepala.id }})" class="p-2 text-gray-600 hover:bg-gray-50 rounded-lg" title="Edit Kepala Bidang">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                    </svg>
                                </button>
                                <button onclick="deleteKepalaBidang({{ kepala.id }}, '{{ kepala.nama|e('js') }}')" class="p-2 text-red-600 hover:bg-red-50 rounded-lg" title="Hapus Kepala Bidang">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                    </svg>
                                </button>
                            </div>
                        </div>
                        {% else %}
                        <div class="text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">👨‍💼</div>
                            <div>Belum ada kepala bidang</div>
                            <div class="text-sm">Klik "Tambah Kepala Bidang" untuk menambah kepala bidang baru</div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

            <!-- Tab Kepala Kantor -->
            <div id="kepala-kantor" class="tab-content">
                <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold">⭐ Kelola Kepala Kantor</h3>
                        <button onclick="openCreateKepalaKantorModal()" class="bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium text-sm">
                            ➕ Tambah Kepala Kantor
                        </button>
                    </div>
                    
                    {% if active_kepala_kantor %}
                    <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                        <div class="flex items-center">
                            <div class="text-2xl mr-3">⭐</div>
                            <div>
                                <div class="font-semibold text-green-800">{{ active_kepala_kantor.nama }}</div>
                                <div class="text-sm text-green-700">
                                    {{ active_kepala_kantor.jabatan }} • NIP: {{ active_kepala_kantor.nip }}
                                </div>
                                <div class="text-xs text-green-600">
                                    📅 {{ active_kepala_kantor.periode }}
                                    {% if active_kepala_kantor.pangkatGol %} • {{ active_kepala_kantor.pangkatGol }}{% endif %}
                                </div>
                            </div>
                            <div class="ml-auto">
                                <span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded">AKTIF</span>
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    
                    <div id="kepalaKantorList" class="space-y-3">
                        {% for kepala in kepala_kantor_list %}
                        <div id="kepala-kantor-{{ kepala.id }}" class="flex items-center justify-between p-4 border border-gray-200 rounded-lg {{ kepala.isAktif ? 'bg-green-50 border-green-200' : '' }}">
                            <div class="flex items-center space-x-4">
                                <div class="text-2xl">{{ kepala.isAktif ? '⭐' : '👤' }}</div>
                                <div>
                                    <div class="font-medium {{ kepala.isAktif ? 'text-green-800' : 'text-gray-800' }}">{{ kepala.nama }}</div>
                                    <div class="text-sm {{ kepala.isAktif ? 'text-green-700' : 'text-gray-600' }}">
                                        NIP: <span class="font-mono">{{ kepala.nip }}</span>
                                    </div>
                                    <div class="text-sm {{ kepala.isAktif ? 'text-green-700' : 'text-gray-600' }}">
                                        {{ kepala.jabatan }}
                                        {% if kepala.pangkatGol %} • {{ kepala.pangkatGol }}{% endif %}
                                    </div>
                                    <div class="flex items-center space-x-3 mt-1">
                                        <span class="text-xs {{ kepala.isAktif ? 'text-green-600' : 'text-gray-500' }}">
                                            📅 {{ kepala.periode }}
                                        </span>
                                        <span class="text-xs font-medium px-2 py-1 rounded {{ kepala.isAktif ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600' }}">
                                            {{ kepala.statusText|upper }}
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <button onclick="editKepalaKantor({{ kepala.id }})" class="p-2 text-gray-600 hover:bg-gray-50 rounded-lg" title="Edit Kepala Kantor">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                    </svg>
                                </button>
                                <button onclick="toggleKepalaKantor({{ kepala.id }})" class="p-2 {{ kepala.isAktif ? 'text-orange-600 hover:bg-orange-50' : 'text-green-600 hover:bg-green-50' }} rounded-lg" title="{{ kepala.isAktif ? 'Nonaktifkan' : 'Aktifkan' }}">
                                    {{ kepala.isAktif ? '🔄' : '✅' }}
                                </button>
                                <button onclick="deleteKepalaKantor({{ kepala.id }}, '{{ kepala.nama|e('js') }}')" class="p-2 text-red-600 hover:bg-red-50 rounded-lg" title="Hapus Kepala Kantor">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                    </svg>
                                </button>
                            </div>
                        </div>
                        {% else %}
                        <div class="text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">⭐</div>
                            <div>Belum ada kepala kantor</div>
                            <div class="text-sm">Klik "Tambah Kepala Kantor" untuk menambah kepala kantor baru</div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal Create/Edit Unit Kerja -->
<div id="unitKerjaModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-lg bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4" id="unitKerjaModalTitle">Tambah Unit Kerja</h3>
            <form id="unitKerjaForm">
                <input type="hidden" id="unitKerjaId" value="">
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Nama Unit Kerja</label>
                    <input type="text" id="unitKerjaNama" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Nama unit kerja" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Kode Unit</label>
                    <input type="text" id="unitKerjaKode" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Kode unit (max 20 karakter)" maxlength="20" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Keterangan</label>
                    <textarea id="unitKerjaKeterangan" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" rows="3" placeholder="Keterangan (opsional)"></textarea>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeUnitKerjaModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400">Batal</button>
                    <button type="submit" class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700">Simpan</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Create/Edit Kepala Bidang -->
<div id="kepalaBidangModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-lg bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4" id="kepalaBidangModalTitle">Tambah Kepala Bidang</h3>
            <form id="kepalaBidangForm">
                <input type="hidden" id="kepalaBidangId" value="">
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Nama Lengkap</label>
                    <input type="text" id="kepalaBidangNama" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Nama lengkap" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">NIP</label>
                    <input type="text" id="kepalaBidangNip" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="18 digit NIP" maxlength="18" pattern="[0-9]{18}" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Jabatan</label>
                    <input type="text" id="kepalaBidangJabatan" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Jabatan" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Pangkat/Golongan</label>
                    <input type="text" id="kepalaBidangPangkat" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Pangkat/Golongan (opsional)">
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Unit Kerja</label>
                    <select id="kepalaBidangUnitKerja" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" required>
                        <option value="">Pilih Unit Kerja</option>
                        {% for unit in unit_kerja_list %}
                        <option value="{{ unit.id }}">{{ unit.namaUnit }} ({{ unit.kodeUnit }})</option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeKepalaBidangModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400">Batal</button>
                    <button type="submit" class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700">Simpan</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Create/Edit Kepala Kantor -->
<div id="kepalaKantorModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-lg bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4" id="kepalaKantorModalTitle">Tambah Kepala Kantor</h3>
            <form id="kepalaKantorForm">
                <input type="hidden" id="kepalaKantorId" value="">
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Nama Lengkap</label>
                    <input type="text" id="kepalaKantorNama" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Nama lengkap" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">NIP</label>
                    <input type="text" id="kepalaKantorNip" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="18 digit NIP" maxlength="18" pattern="[0-9]{18}" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Jabatan</label>
                    <input type="text" id="kepalaKantorJabatan" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Jabatan" required>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Pangkat/Golongan</label>
                    <input type="text" id="kepalaKantorPangkat" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" placeholder="Pangkat/Golongan (opsional)">
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Periode</label>
                    <select id="kepalaKantorPeriode" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" required>
                        <option value="">Pilih Periode</option>
                        {% set currentYear = 'now'|date('Y')|number_format(0, '', '') %}
                        {% for year in (currentYear - 5)..(currentYear + 10) %}
                            {% set nextYear = year + 1 %}
                            <option value="{{ year }}-{{ nextYear }}">Periode {{ year }}-{{ nextYear }}</option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="mb-4">
                    <label class="flex items-center">
                        <input type="checkbox" id="kepalaKantorAktif" class="rounded border-gray-300 text-purple-600 shadow-sm focus:border-purple-300 focus:ring focus:ring-purple-200 focus:ring-opacity-50">
                        <span class="ml-2 text-sm text-gray-700">Aktifkan sebagai Kepala Kantor saat ini</span>
                    </label>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeKepalaKantorModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400">Batal</button>
                    <button type="submit" class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700">Simpan</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Assign Pegawai -->
<div id="assignPegawaiModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-lg bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4" id="assignPegawaiModalTitle">Assign Pegawai ke Unit Kerja</h3>
            <form id="assignPegawaiForm">
                <input type="hidden" id="assignPegawaiId" value="">
                
                <div class="mb-4" id="pegawaiSelectDiv">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Pilih Pegawai</label>
                    <select id="assignPegawaiSelect" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" required>
                        <option value="">Pilih Pegawai</option>
                        <!-- Will be populated by JavaScript -->
                    </select>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Unit Kerja Tujuan</label>
                    <select id="assignUnitKerja" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-purple-500 focus:border-purple-500" required>
                        <option value="">Pilih Unit Kerja</option>
                        {% for unit in unit_kerja_list %}
                        <option value="{{ unit.id }}">{{ unit.namaUnit }} ({{ unit.kodeUnit }})</option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeAssignPegawaiModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400">Batal</button>
                    <button type="submit" class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div id="loadingModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-lg bg-white">
        <div class="mt-3 text-center">
            <div class="text-4xl mb-4">⏳</div>
            <h3 class="text-lg font-medium text-gray-900">Memproses...</h3>
            <p class="text-sm text-gray-500 mt-2">Harap tunggu sebentar</p>
        </div>
    </div>
</div>

<script>
// Tab functionality
function switchTab(targetTab) {
    // Hide all tab contents
    document.querySelectorAll('.tab-content').forEach(content => {
        content.classList.remove('active');
    });
    
    // Remove active class from all tab links
    document.querySelectorAll('.tab-link').forEach(link => {
        link.classList.remove('active', 'border-purple-500', 'text-purple-600');
        link.classList.add('border-transparent', 'text-gray-500');
    });
    
    // Show target tab content
    document.getElementById(targetTab).classList.add('active');
    
    // Add active class to clicked tab link
    const activeLink = document.querySelector(`a[href="#${targetTab}"]`);
    activeLink.classList.add('active', 'border-purple-500', 'text-purple-600');
    activeLink.classList.remove('border-transparent', 'text-gray-500');
}

// Initialize tab functionality
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.tab-link').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetTab = this.getAttribute('href').substring(1);
            switchTab(targetTab);
        });
    });
});

// User menu toggle
function toggleUserMenu() {
    const menu = document.getElementById('userMenu');
    menu.classList.toggle('hidden');
}

// Close user menu when clicking outside
document.addEventListener('click', function(event) {
    const menu = document.getElementById('userMenu');
    const button = event.target.closest('button[onclick="toggleUserMenu()"]');
    
    if (!button && !menu.contains(event.target)) {
        menu.classList.add('hidden');
    }
});

// Loading modal functions
function showLoading() {
    document.getElementById('loadingModal').classList.remove('hidden');
}

function hideLoading() {
    document.getElementById('loadingModal').classList.add('hidden');
}

// Alert function
function showAlert(message, type = 'info') {
    const alertClass = type === 'success' ? 'bg-green-100 border-green-500 text-green-700' : 
                      type === 'error' ? 'bg-red-100 border-red-500 text-red-700' : 
                      type === 'warning' ? 'bg-yellow-100 border-yellow-500 text-yellow-700' :
                      'bg-blue-100 border-blue-500 text-blue-700';
    
    const alertDiv = document.createElement('div');
    alertDiv.className = `fixed top-4 right-4 p-4 border-l-4 rounded ${alertClass} z-50`;
    alertDiv.innerHTML = message;
    
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
        alertDiv.remove();
    }, 5000);
}

// =================== UNIT KERJA FUNCTIONS ===================

function openCreateUnitKerjaModal() {
    document.getElementById('unitKerjaModalTitle').textContent = 'Tambah Unit Kerja';
    document.getElementById('unitKerjaId').value = '';
    document.getElementById('unitKerjaForm').reset();
    document.getElementById('unitKerjaModal').classList.remove('hidden');
}

function closeUnitKerjaModal() {
    document.getElementById('unitKerjaModal').classList.add('hidden');
}

async function editUnitKerja(id) {
    try {
        const response = await fetch(`/admin/struktur-organisasi/unit-kerja/${id}/edit`);
        const data = await response.json();
        
        document.getElementById('unitKerjaModalTitle').textContent = 'Edit Unit Kerja';
        document.getElementById('unitKerjaId').value = data.id;
        document.getElementById('unitKerjaNama').value = data.nama_unit;
        document.getElementById('unitKerjaKode').value = data.kode_unit;
        document.getElementById('unitKerjaKeterangan').value = data.keterangan || '';
        
        document.getElementById('unitKerjaModal').classList.remove('hidden');
    } catch (error) {
        showAlert('Gagal memuat data unit kerja', 'error');
    }
}

// Unit Kerja form submission
document.getElementById('unitKerjaForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const id = document.getElementById('unitKerjaId').value;
    const isEdit = id !== '';
    const url = isEdit ? `/admin/struktur-organisasi/unit-kerja/${id}/update` : '/admin/struktur-organisasi/unit-kerja/create';
    
    const formData = new FormData();
    formData.append('nama_unit', document.getElementById('unitKerjaNama').value);
    formData.append('kode_unit', document.getElementById('unitKerjaKode').value);
    formData.append('keterangan', document.getElementById('unitKerjaKeterangan').value);
    
    showLoading();
    
    try {
        const response = await fetch(url, {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            closeUnitKerjaModal();
            
            if (isEdit) {
                // Update existing row
                updateUnitKerjaInList(result.unit_kerja);
            } else {
                // Add new row
                addUnitKerjaToList(result.unit_kerja);
            }
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
});

async function deleteUnitKerja(id, nama) {
    if (!confirm(`⚠️ PERINGATAN!\n\nApakah Anda yakin ingin menghapus Unit Kerja "${nama}"?\n\n❌ Tindakan ini tidak dapat dibatalkan!`)) {
        return;
    }
    
    showLoading();
    
    try {
        const response = await fetch(`/admin/struktur-organisasi/unit-kerja/${id}/delete`, {
            method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            
            // Remove from UI
            const unitRow = document.getElementById(`unit-${id}`);
            if (unitRow) {
                unitRow.style.transition = 'all 0.3s ease';
                unitRow.style.opacity = '0';
                unitRow.style.transform = 'translateX(-20px)';
                
                setTimeout(() => {
                    unitRow.remove();
                }, 300);
            }
        } else {
            showAlert(result.message, result.message.includes('memiliki') ? 'warning' : 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
}

function addUnitKerjaToList(unitKerja) {
    // Implementation to add new unit kerja to the list
    // For now, just reload the page
    window.location.reload();
}

function updateUnitKerjaInList(unitKerja) {
    // Implementation to update existing unit kerja in the list
    // For now, just reload the page
    window.location.reload();
}

// =================== KEPALA BIDANG FUNCTIONS ===================

function openCreateKepalaBidangModal() {
    document.getElementById('kepalaBidangModalTitle').textContent = 'Tambah Kepala Bidang';
    document.getElementById('kepalaBidangId').value = '';
    document.getElementById('kepalaBidangForm').reset();
    document.getElementById('kepalaBidangModal').classList.remove('hidden');
    
    // Load available units
    loadAvailableUnits();
}

function closeKepalaBidangModal() {
    document.getElementById('kepalaBidangModal').classList.add('hidden');
}

async function loadAvailableUnits() {
    try {
        const response = await fetch('/admin/struktur-organisasi/get-available-units');
        const units = await response.json();
        
        const select = document.getElementById('kepalaBidangUnitKerja');
        select.innerHTML = '<option value="">Pilih Unit Kerja</option>';
        
        units.forEach(unit => {
            const option = document.createElement('option');
            option.value = unit.id;
            option.textContent = `${unit.nama_unit} (${unit.kode_unit})`;
            select.appendChild(option);
        });
    } catch (error) {
        console.error('Gagal memuat unit kerja tersedia', error);
    }
}

async function editKepalaBidang(id) {
    try {
        const response = await fetch(`/admin/struktur-organisasi/kepala-bidang/${id}/edit`);
        const data = await response.json();
        
        document.getElementById('kepalaBidangModalTitle').textContent = 'Edit Kepala Bidang';
        document.getElementById('kepalaBidangId').value = data.id;
        document.getElementById('kepalaBidangNama').value = data.nama;
        document.getElementById('kepalaBidangNip').value = data.nip;
        document.getElementById('kepalaBidangJabatan').value = data.jabatan;
        document.getElementById('kepalaBidangPangkat').value = data.pangkat_gol || '';
        
        // Load all units for edit mode
        await loadAllUnitsForEdit(data.unit_kerja_id);
        
        document.getElementById('kepalaBidangModal').classList.remove('hidden');
    } catch (error) {
        showAlert('Gagal memuat data kepala bidang', 'error');
    }
}

async function loadAllUnitsForEdit(selectedUnitId) {
    // For edit mode, load all units, not just available ones
    const select = document.getElementById('kepalaBidangUnitKerja');
    select.innerHTML = '<option value="">Pilih Unit Kerja</option>';
    
    {% for unit in unit_kerja_list %}
    const option{{ unit.id }} = document.createElement('option');
    option{{ unit.id }}.value = '{{ unit.id }}';
    option{{ unit.id }}.textContent = '{{ unit.namaUnit }} ({{ unit.kodeUnit }})';
    if ({{ unit.id }} === selectedUnitId) {
        option{{ unit.id }}.selected = true;
    }
    select.appendChild(option{{ unit.id }});
    {% endfor %}
}

// Kepala Bidang form submission
document.getElementById('kepalaBidangForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const id = document.getElementById('kepalaBidangId').value;
    const isEdit = id !== '';
    const url = isEdit ? `/admin/struktur-organisasi/kepala-bidang/${id}/update` : '/admin/struktur-organisasi/kepala-bidang/create';
    
    const formData = new FormData();
    formData.append('nama', document.getElementById('kepalaBidangNama').value);
    formData.append('nip', document.getElementById('kepalaBidangNip').value);
    formData.append('jabatan', document.getElementById('kepalaBidangJabatan').value);
    formData.append('pangkat_gol', document.getElementById('kepalaBidangPangkat').value);
    formData.append('unit_kerja_id', document.getElementById('kepalaBidangUnitKerja').value);
    
    showLoading();
    
    try {
        const response = await fetch(url, {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            closeKepalaBidangModal();
            
            // Reload page to update all related data
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
});

async function deleteKepalaBidang(id, nama) {
    if (!confirm(`⚠️ PERINGATAN!\n\nApakah Anda yakin ingin menghapus Kepala Bidang "${nama}"?\n\n❌ Tindakan ini tidak dapat dibatalkan!`)) {
        return;
    }
    
    showLoading();
    
    try {
        const response = await fetch(`/admin/struktur-organisasi/kepala-bidang/${id}/delete`, {
            method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            
            // Remove from UI
            const kepalaBidangRow = document.getElementById(`kepala-bidang-${id}`);
            if (kepalaBidangRow) {
                kepalaBidangRow.style.transition = 'all 0.3s ease';
                kepalaBidangRow.style.opacity = '0';
                kepalaBidangRow.style.transform = 'translateX(-20px)';
                
                setTimeout(() => {
                    kepalaBidangRow.remove();
                }, 300);
            }
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
}

// =================== KEPALA KANTOR FUNCTIONS ===================

function openCreateKepalaKantorModal() {
    document.getElementById('kepalaKantorModalTitle').textContent = 'Tambah Kepala Kantor';
    document.getElementById('kepalaKantorId').value = '';
    document.getElementById('kepalaKantorForm').reset();
    document.getElementById('kepalaKantorModal').classList.remove('hidden');
}

function closeKepalaKantorModal() {
    document.getElementById('kepalaKantorModal').classList.add('hidden');
}

async function editKepalaKantor(id) {
    try {
        const response = await fetch(`/admin/struktur-organisasi/kepala-kantor/${id}/edit`);
        const data = await response.json();
        
        document.getElementById('kepalaKantorModalTitle').textContent = 'Edit Kepala Kantor';
        document.getElementById('kepalaKantorId').value = data.id;
        document.getElementById('kepalaKantorNama').value = data.nama;
        document.getElementById('kepalaKantorNip').value = data.nip;
        document.getElementById('kepalaKantorJabatan').value = data.jabatan;
        document.getElementById('kepalaKantorPangkat').value = data.pangkat_gol || '';
        document.getElementById('kepalaKantorPeriode').value = data.periode;
        document.getElementById('kepalaKantorAktif').checked = data.is_aktif;
        
        document.getElementById('kepalaKantorModal').classList.remove('hidden');
    } catch (error) {
        showAlert('Gagal memuat data kepala kantor', 'error');
    }
}

// Kepala Kantor form submission
document.getElementById('kepalaKantorForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const id = document.getElementById('kepalaKantorId').value;
    const isEdit = id !== '';
    const url = isEdit ? `/admin/struktur-organisasi/kepala-kantor/${id}/update` : '/admin/struktur-organisasi/kepala-kantor/create';
    
    const formData = new FormData();
    formData.append('nama', document.getElementById('kepalaKantorNama').value);
    formData.append('nip', document.getElementById('kepalaKantorNip').value);
    formData.append('jabatan', document.getElementById('kepalaKantorJabatan').value);
    formData.append('pangkat_gol', document.getElementById('kepalaKantorPangkat').value);
    formData.append('periode', document.getElementById('kepalaKantorPeriode').value);
    formData.append('is_aktif', document.getElementById('kepalaKantorAktif').checked ? '1' : '0');
    
    showLoading();
    
    try {
        const response = await fetch(url, {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            closeKepalaKantorModal();
            
            // Reload page to update all related data
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
});

async function toggleKepalaKantor(id) {
    showLoading();
    
    try {
        const response = await fetch(`/admin/struktur-organisasi/kepala-kantor/${id}/toggle`, {
            method: 'POST'
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            
            // Reload page to update all status indicators
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
}

async function deleteKepalaKantor(id, nama) {
    if (!confirm(`⚠️ PERINGATAN!\n\nApakah Anda yakin ingin menghapus Kepala Kantor "${nama}"?\n\n❌ Tindakan ini tidak dapat dibatalkan!`)) {
        return;
    }
    
    showLoading();
    
    try {
        const response = await fetch(`/admin/struktur-organisasi/kepala-kantor/${id}/delete`, {
            method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            
            // Remove from UI
            const kepalaKantorRow = document.getElementById(`kepala-kantor-${id}`);
            if (kepalaKantorRow) {
                kepalaKantorRow.style.transition = 'all 0.3s ease';
                kepalaKantorRow.style.opacity = '0';
                kepalaKantorRow.style.transform = 'translateX(-20px)';
                
                setTimeout(() => {
                    kepalaKantorRow.remove();
                }, 300);
            }
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
}

// NIP validation
document.getElementById('kepalaBidangNip').addEventListener('input', function() {
    this.value = this.value.replace(/\D/g, ''); // Only allow digits
});

document.getElementById('kepalaKantorNip').addEventListener('input', function() {
    this.value = this.value.replace(/\D/g, ''); // Only allow digits
});

// =================== PEGAWAI FUNCTIONS ===================

function filterPegawaiByUnit() {
    const selectedUnit = document.getElementById('filterUnitKerja').value;
    const pegawaiItems = document.querySelectorAll('.pegawai-item');
    
    pegawaiItems.forEach(item => {
        if (selectedUnit === '' || item.classList.contains(`unit-${selectedUnit}`)) {
            item.style.display = 'flex';
        } else {
            item.style.display = 'none';
        }
    });
}

function openAssignPegawaiModal() {
    console.log('openAssignPegawaiModal called'); // Debug log

    try {
        document.getElementById('assignPegawaiModalTitle').textContent = 'Assign Pegawai ke Unit Kerja';
        document.getElementById('assignPegawaiId').value = '';
        document.getElementById('assignPegawaiForm').reset();
        document.getElementById('pegawaiSelectDiv').style.display = 'block';

        // Load all pegawai
        loadAllPegawai();

        document.getElementById('assignPegawaiModal').classList.remove('hidden');

        console.log('Modal should be visible now'); // Debug log
    } catch (error) {
        console.error('Error opening assign pegawai modal:', error);
        showAlert('Error membuka modal: ' + error.message, 'error');
    }
}

function closeAssignPegawaiModal() {
    document.getElementById('assignPegawaiModal').classList.add('hidden');
}

async function loadAllPegawai() {
    const select = document.getElementById('assignPegawaiSelect');

    try {
        // Show loading state
        select.innerHTML = '<option value="">Memuat data pegawai...</option>';

        const response = await fetch('/admin/struktur-organisasi/get-all-pegawai');

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const pegawai = await response.json();

        // Reset options
        select.innerHTML = '<option value="">Pilih Pegawai</option>';

        if (Array.isArray(pegawai) && pegawai.length > 0) {
            pegawai.forEach(p => {
                const option = document.createElement('option');
                option.value = p.id;
                option.textContent = `${p.nama} (${p.nip}) - ${p.jabatan}`;
                select.appendChild(option);
            });
        } else {
            select.innerHTML = '<option value="">Tidak ada pegawai tersedia</option>';
        }

    } catch (error) {
        console.error('Gagal memuat daftar pegawai:', error);
        select.innerHTML = '<option value="">Error: Gagal memuat data pegawai</option>';
        showAlert('Gagal memuat daftar pegawai. Silakan refresh halaman.', 'error');
    }
}

async function reassignPegawai(pegawaiId, namaPegawai) {
    document.getElementById('assignPegawaiModalTitle').textContent = `Pindah Unit Kerja - ${namaPegawai}`;
    document.getElementById('assignPegawaiId').value = pegawaiId;
    document.getElementById('assignPegawaiForm').reset();
    document.getElementById('pegawaiSelectDiv').style.display = 'none';
    
    document.getElementById('assignPegawaiModal').classList.remove('hidden');
}

async function removePegawaiFromUnit(pegawaiId, namaPegawai) {
    if (!confirm(`⚠️ KONFIRMASI\n\nApakah Anda yakin ingin melepas "${namaPegawai}" dari unit kerja saat ini?\n\nPegawai akan kembali ke status tanpa unit kerja.`)) {
        return;
    }
    
    showLoading();
    
    try {
        const response = await fetch(`/admin/struktur-organisasi/pegawai/${pegawaiId}/remove-unit`, {
            method: 'POST'
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            
            // Reload page to update all related data
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(result.message, 'error');
        }
    } catch (error) {
        showAlert('Terjadi kesalahan koneksi', 'error');
    } finally {
        hideLoading();
    }
}

// Assign Pegawai form submission
document.getElementById('assignPegawaiForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const pegawaiId = document.getElementById('assignPegawaiId').value || document.getElementById('assignPegawaiSelect').value;
    const unitKerjaId = document.getElementById('assignUnitKerja').value;

    console.log('Form data:', { pegawaiId, unitKerjaId }); // Debug log

    if (!pegawaiId || !unitKerjaId) {
        showAlert('Harap pilih pegawai dan unit kerja', 'error');
        return;
    }

    showLoading();

    try {
        const formData = new FormData();
        formData.append('pegawai_id', pegawaiId);
        formData.append('unit_kerja_id', unitKerjaId);

        console.log('Sending request to assign pegawai...'); // Debug log

        const response = await fetch('/admin/struktur-organisasi/pegawai/assign-unit', {
            method: 'POST',
            body: formData
        });

        console.log('Response status:', response.status); // Debug log

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        console.log('Response result:', result); // Debug log

        if (result.success) {
            showAlert(result.message, 'success');
            closeAssignPegawaiModal();

            // Reload page to update all related data
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(result.message || 'Gagal assign pegawai ke unit', 'error');
        }
    } catch (error) {
        console.error('Error assigning pegawai:', error);
        showAlert('Terjadi kesalahan koneksi: ' + error.message, 'error');
    } finally {
        hideLoading();
    }
});

// Close modals when clicking outside
window.addEventListener('click', function(event) {
    if (event.target === document.getElementById('unitKerjaModal')) {
        closeUnitKerjaModal();
    }
    if (event.target === document.getElementById('kepalaBidangModal')) {
        closeKepalaBidangModal();
    }
    if (event.target === document.getElementById('kepalaKantorModal')) {
        closeKepalaKantorModal();
    }
    if (event.target === document.getElementById('assignPegawaiModal')) {
        closeAssignPegawaiModal();
    }
});

// Toggle submenu function
function toggleSubmenu(menuId) {
    const submenu = document.getElementById(menuId);
    const arrow = submenu.previousElementSibling.querySelector('.submenu-arrow');
    
    if (submenu.classList.contains('hidden')) {
        submenu.classList.remove('hidden');
        arrow.classList.add('rotate-180');
    } else {
        submenu.classList.add('hidden');
        arrow.classList.remove('rotate-180');
    }
}

// Function to handle URL tab parameter
function initializeTabFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    const tabParam = urlParams.get('tab');
    
    if (tabParam) {
        let targetTab;
        switch(tabParam) {
            case 'unitKerja':
                targetTab = 'unit-kerja';
                break;
            case 'kepalaBidang':
                targetTab = 'kepala-bidang';
                break;
            case 'kepalaKantor':
                targetTab = 'kepala-kantor';
                break;
            case 'pegawai':
                targetTab = 'pegawai';
                break;
            default:
                targetTab = 'unit-kerja';
        }
        
        // Switch to the target tab
        switchTab(targetTab);
        
        // Expand submenu if coming from sidebar
        const userManagement = document.getElementById('userManagement');
        const arrow = userManagement.previousElementSibling.querySelector('.submenu-arrow');
        if (userManagement.classList.contains('hidden')) {
            userManagement.classList.remove('hidden');
            arrow.classList.add('rotate-180');
        }
    }
}

// Initialize tab from URL when page loads
document.addEventListener('DOMContentLoaded', function() {
    initializeTabFromURL();
});
</script>

<style>
.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
}

/* Submenu Animation */
.submenu-arrow {
    transition: transform 0.2s ease-in-out;
}

/* Menu Hover Effects */
.menu-group button:hover,
.menu-group a:hover {
    background-color: #f9fafb;
}

/* Active Menu Style */
.menu-active {
    background-color: #f3f4f6;
    border-left-color: #3b82f6 !important;
    color: #3b82f6;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .flex {
        flex-direction: column;
    }
    .w-64 {
        width: 100%;
        height: auto;
    }
    .flex-1 {
        min-height: calc(100vh - 200px);
    }
}

/* Scrollbar Styling */
.overflow-y-auto::-webkit-scrollbar {
    width: 6px;
}

.overflow-y-auto::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.overflow-y-auto::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 3px;
}

.overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}
</style>
        </div>
    </div>
</div>

{% endblock %}